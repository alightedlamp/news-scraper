{"version":3,"sources":["../../src/util/scraper.js"],"names":["scrapeMedium","get","then","response","$","load","data","parent","each","i","el","console","log","child","attr","find","push","title","link","score","source","catch","Error","err","scrapeReddit","item","text","scrapeHackerNews","next","children","split"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;AACA;AACA;AACA;;AAEA,IAAMA,eAAe,SAAfA,YAAe;AAAA,SACnB,gBACGC,GADH,yBAEGC,IAFH,CAEQ,UAACC,QAAD,EAAc;AAClB,QAAMC,IAAI,kBAAQC,IAAR,CAAaF,SAASG,IAAtB,CAAV;;AAEA,QAAMA,OAAO,EAAb;AACA,QAAMC,SAASH,EAAE,cAAF,CAAf;;AAEAG,WAAOC,IAAP,CAAY,UAACC,CAAD,EAAIC,EAAJ,EAAW;AACrBC,cAAQC,GAAR,CAAYF,GAAGG,KAAH,CAAS,GAAT,EAAcC,IAAd,CAAmB,MAAnB,CAAZ;AACAH,cAAQC,GAAR,CAAYF,GAAGK,IAAH,CAAQ,OAAR,CAAZ;AACAT,WAAKU,IAAL,CAAU;AACRC,eAAO,MADC;AAERC,cAAM,MAFE;AAGRC,eAAO,EAHC;AAIRC,gBAAQ;AAJA,OAAV;AAMD,KATD;AAUA,WAAOd,IAAP;AACD,GAnBH,EAoBGe,KApBH,CAoBS;AAAA,WAAO,IAAIC,KAAJ,CAAUC,GAAV,CAAP;AAAA,GApBT,CADmB;AAAA,CAArB;;AAuBA,IAAMC,eAAe,SAAfA,YAAe;AAAA,SACnB,gBACGvB,GADH,qBAEGC,IAFH,CAEQ,UAACC,QAAD,EAAc;AAClB,QAAMC,IAAI,kBAAQC,IAAR,CAAaF,SAASG,IAAtB,CAAV;;AAEA,QAAMA,OAAO,EAAb;;AAEAF,MAAE,UAAF,EAAcI,IAAd,CAAmB,UAACC,CAAD,EAAIC,EAAJ,EAAW;AAC5B,UAAMe,OAAOrB,EAAEM,EAAF,EAAMK,IAAN,CAAWX,EAAE,SAAF,CAAX,CAAb;AACAE,WAAKU,IAAL,CAAU;AACRC,eAAOQ,KAAKC,IAAL,EADC;AAERR,cAAMO,KAAKX,IAAL,CAAU,MAAV,CAFE;AAGRK,eAAOf,EAAEM,EAAF,EAAMI,IAAN,CAAW,YAAX,CAHC;AAIRM,gBAAQ;AAJA,OAAV;AAMD,KARD;AASA,WAAOd,IAAP;AACD,GAjBH,EAkBGe,KAlBH,CAkBS;AAAA,WAAO,IAAIC,KAAJ,CAAUC,GAAV,CAAP;AAAA,GAlBT,CADmB;AAAA,CAArB;;AAqBA,IAAMI,mBAAmB,SAAnBA,gBAAmB;AAAA,SACvB,gBACG1B,GADH,yBAEGC,IAFH,CAEQ,UAACC,QAAD,EAAc;AAClB,QAAMC,IAAI,kBAAQC,IAAR,CAAaF,SAASG,IAAtB,CAAV;;AAEA,QAAMA,OAAO,EAAb;AACA,QAAMC,SAASH,EAAE,SAAF,CAAf;;AAEAG,WAAOC,IAAP,CAAY,UAACC,CAAD,EAAIC,EAAJ,EAAW;AACrB,UAAMe,OAAOrB,EAAEM,EAAF,EAAMK,IAAN,CAAWX,EAAE,UAAF,CAAX,CAAb;;AAEAE,WAAKU,IAAL,CAAU;AACRC,eAAOQ,KAAKC,IAAL,EADC;AAERR,cAAMO,KAAKX,IAAL,CAAU,MAAV,CAFE;AAGRK,eAAOf,EAAEM,EAAF,EACJH,MADI,CACG,SADH,EAEJqB,IAFI,GAGJC,QAHI,CAGK,QAHL,EAIJH,IAJI,GAKJI,KALI,CAKE,GALF,EAKO,CALP,CAHC;AASRV,gBAAQ;AATA,OAAV;AAWD,KAdD;AAeA,WAAOd,IAAP;AACD,GAxBH,EAyBGe,KAzBH,CAyBS;AAAA,WAAO,IAAIC,KAAJ,CAAUC,GAAV,CAAP;AAAA,GAzBT,CADuB;AAAA,CAAzB;;kBA4Be;AACbvB,4BADa;AAEbwB,4BAFa;AAGbG;AAHa,C","file":"scraper.js","sourcesContent":["import cheerio from 'cheerio'\nimport axios from 'axios'\n\nimport { HACKERNOON_URL, REDDIT_URL, HACKERNEWS_URL } from '../shared/config'\n// const FREECODECAMP_URL = 'https://medium.freecodecamp.org/'\n// const CSS_TRICKS_URL = 'https://css-tricks.com'\n// const SMASHING_MAG_URL = 'https://www.smashingmagazine.com/articles/'\n// const CODING_HORROR_URL = 'https://blog.codinghorror.com/'\n\nconst scrapeMedium = () =>\n  axios\n    .get(HACKERNOON_URL)\n    .then((response) => {\n      const $ = cheerio.load(response.data)\n\n      const data = []\n      const parent = $('.postArticle')\n\n      parent.each((i, el) => {\n        console.log(el.child('a').attr('href'))\n        console.log(el.find('.graf'))\n        data.push({\n          title: 'test',\n          link: 'test',\n          score: 10,\n          source: 'Hackernoon',\n        })\n      })\n      return data\n    })\n    .catch(err => new Error(err))\n\nconst scrapeReddit = () =>\n  axios\n    .get(REDDIT_URL)\n    .then((response) => {\n      const $ = cheerio.load(response.data)\n\n      const data = []\n\n      $('div.link').each((i, el) => {\n        const item = $(el).find($('a.title'))\n        data.push({\n          title: item.text(),\n          link: item.attr('href'),\n          score: $(el).attr('data-score'),\n          source: 'JavaScript Subreddit',\n        })\n      })\n      return data\n    })\n    .catch(err => new Error(err))\n\nconst scrapeHackerNews = () =>\n  axios\n    .get(HACKERNEWS_URL)\n    .then((response) => {\n      const $ = cheerio.load(response.data)\n\n      const data = []\n      const parent = $('.athing')\n\n      parent.each((i, el) => {\n        const item = $(el).find($('.title a'))\n\n        data.push({\n          title: item.text(),\n          link: item.attr('href'),\n          score: $(el)\n            .parent('.athing')\n            .next()\n            .children('.score')\n            .text()\n            .split(' ')[0],\n          source: 'HackerNews',\n        })\n      })\n      return data\n    })\n    .catch(err => new Error(err))\n\nexport default {\n  scrapeMedium,\n  scrapeReddit,\n  scrapeHackerNews,\n}\n"]}