{"version":3,"sources":["../../src/controllers/userController.js"],"names":["getUserData","user","authenticated","getUserById","req","res","next","user_id","_id","data","json","logoutUser","logout","redirect","registerUser","register","username","body","password","then","authenticate","failureRedirect","catch","err","updateUserById","update","doc","deleteUserById","delete","sendStatus","renderDashboard","render","renderProfile","renderEdit","renderLogin","renderRegister"],"mappings":"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","file":"userController.js","sourcesContent":["import passport from 'passport'\nimport User from '../models/User'\n\n// User handlers\n// ////////////////////////////\n\nexport const getUserData = (user) => {\n  if (user.authenticated) {\n    // Get saved articles, favorites, and private stats\n  } else {\n    // Return favorites and public info\n  }\n}\n\n// API route controllers\n// ////////////////////////////\n\nexport const getUserById = async (req, res, next) => {\n  try {\n    const data = await getUserData({ user_id: req.user._id, authenticated: false })\n    req.json(data)\n  } catch (err) {\n    next(err)\n  }\n}\n\nexport const logoutUser = (req, res) => {\n  req.logout()\n  res.redirect('/')\n}\n\nexport const registerUser = (req, res, next) =>\n  User.register(new User({ username: req.body.username }), req.body.password)\n    .then(() => {\n      passport.authenticate('local', { failureRedirect: '/user/login' })(req, res, () =>\n        res.redirect('/'))\n    })\n    .catch(err => next(err))\n\nexport const updateUserById = (req, res, next) =>\n  User.update(req.body)\n    .then(doc => res.json(doc))\n    .catch(err => next(err))\n\nexport const deleteUserById = (req, res, next) =>\n  User.delete({ _id: req.user._id })\n    .then(() => res.sendStatus(200))\n    .catch(err => next(err))\n\n// HTML route controllers\n// ////////////////////////////\n\nexport const renderDashboard = async (req, res) => {\n  const data = await getUserData({ user_id: req.user._id, authenticated: true })\n  res.render('dashboard', { data, user: req.username })\n}\nexport const renderProfile = async (req, res) => {\n  const data = await getUserData({ user_id: req.user._id, authenticated: false })\n  res.render('profile', { data, user: req.user.username })\n}\nexport const renderEdit = (req, res) => {\n  res.render('edit', { user: req.user.username })\n}\nexport const renderLogin = (req, res) => {\n  if (req.user) {\n    renderProfile()\n  } else {\n    res.render('login')\n  }\n}\nexport const renderRegister = (req, res) => res.render('register')\n"]}